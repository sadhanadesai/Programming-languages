Terminals which are not used

   TOK_DIV
   TOK_INTEGER


State 30 conflicts: 2 shift/reduce
State 31 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: TOK_MAIN TOK_LRBRACK TOK_RRBRACK TOK_LCBRACK stmts TOK_RCBRACK

    2 stmts: /* empty */
    3      | stmt TOK_SEMICOLON stmts

    4 stmt: TOK_PRINT TOK_ID
    5     | TOK_ID TOK_EQUALS exprs
    6     | TOK_ID TOK_MUL TOK_EQUALS exprs
    7     | TOK_ID TOK_ADD TOK_EQUALS exprs

    8 exprs: TOK_NUM
    9      | TOK_ID
   10      | exprs TOK_ADD exprs
   11      | exprs TOK_MUL exprs
   12      | TOK_LRBRACK TOK_SUB TOK_NUM TOK_RRBRACK


Terminals, with rules where they appear

$end (0) 0
error (256)
TOK_MAIN (258) 1
TOK_LRBRACK (259) 1 12
TOK_RRBRACK (260) 1 12
TOK_LCBRACK (261) 1
TOK_RCBRACK (262) 1
TOK_PRINT (263) 4
TOK_SEMICOLON (264) 3
TOK_EQUALS (265) 5 6 7
TOK_NUM (266) 8 12
TOK_ID (267) 4 5 6 7 9
TOK_ADD (268) 7 10
TOK_SUB (269) 12
TOK_MUL (270) 6 11
TOK_DIV (271)
TOK_INTEGER (272)


Nonterminals, with rules where they appear

$accept (18)
    on left: 0
prog (19)
    on left: 1, on right: 0
stmts (20)
    on left: 2 3, on right: 1 3
stmt (21)
    on left: 4 5 6 7, on right: 3
exprs (22)
    on left: 8 9 10 11 12, on right: 5 6 7 10 11


state 0

    0 $accept: . prog $end

    TOK_MAIN  shift, and go to state 1

    prog  go to state 2


state 1

    1 prog: TOK_MAIN . TOK_LRBRACK TOK_RRBRACK TOK_LCBRACK stmts TOK_RCBRACK

    TOK_LRBRACK  shift, and go to state 3


state 2

    0 $accept: prog . $end

    $end  shift, and go to state 4


state 3

    1 prog: TOK_MAIN TOK_LRBRACK . TOK_RRBRACK TOK_LCBRACK stmts TOK_RCBRACK

    TOK_RRBRACK  shift, and go to state 5


state 4

    0 $accept: prog $end .

    $default  accept


state 5

    1 prog: TOK_MAIN TOK_LRBRACK TOK_RRBRACK . TOK_LCBRACK stmts TOK_RCBRACK

    TOK_LCBRACK  shift, and go to state 6


state 6

    1 prog: TOK_MAIN TOK_LRBRACK TOK_RRBRACK TOK_LCBRACK . stmts TOK_RCBRACK

    TOK_PRINT  shift, and go to state 7
    TOK_ID     shift, and go to state 8

    $default  reduce using rule 2 (stmts)

    stmts  go to state 9
    stmt   go to state 10


state 7

    4 stmt: TOK_PRINT . TOK_ID

    TOK_ID  shift, and go to state 11


state 8

    5 stmt: TOK_ID . TOK_EQUALS exprs
    6     | TOK_ID . TOK_MUL TOK_EQUALS exprs
    7     | TOK_ID . TOK_ADD TOK_EQUALS exprs

    TOK_EQUALS  shift, and go to state 12
    TOK_ADD     shift, and go to state 13
    TOK_MUL     shift, and go to state 14


state 9

    1 prog: TOK_MAIN TOK_LRBRACK TOK_RRBRACK TOK_LCBRACK stmts . TOK_RCBRACK

    TOK_RCBRACK  shift, and go to state 15


state 10

    3 stmts: stmt . TOK_SEMICOLON stmts

    TOK_SEMICOLON  shift, and go to state 16


state 11

    4 stmt: TOK_PRINT TOK_ID .

    $default  reduce using rule 4 (stmt)


state 12

    5 stmt: TOK_ID TOK_EQUALS . exprs

    TOK_LRBRACK  shift, and go to state 17
    TOK_NUM      shift, and go to state 18
    TOK_ID       shift, and go to state 19

    exprs  go to state 20


state 13

    7 stmt: TOK_ID TOK_ADD . TOK_EQUALS exprs

    TOK_EQUALS  shift, and go to state 21


state 14

    6 stmt: TOK_ID TOK_MUL . TOK_EQUALS exprs

    TOK_EQUALS  shift, and go to state 22


state 15

    1 prog: TOK_MAIN TOK_LRBRACK TOK_RRBRACK TOK_LCBRACK stmts TOK_RCBRACK .

    $default  reduce using rule 1 (prog)


state 16

    3 stmts: stmt TOK_SEMICOLON . stmts

    TOK_PRINT  shift, and go to state 7
    TOK_ID     shift, and go to state 8

    $default  reduce using rule 2 (stmts)

    stmts  go to state 23
    stmt   go to state 10


state 17

   12 exprs: TOK_LRBRACK . TOK_SUB TOK_NUM TOK_RRBRACK

    TOK_SUB  shift, and go to state 24


state 18

    8 exprs: TOK_NUM .

    $default  reduce using rule 8 (exprs)


state 19

    9 exprs: TOK_ID .

    $default  reduce using rule 9 (exprs)


state 20

    5 stmt: TOK_ID TOK_EQUALS exprs .
   10 exprs: exprs . TOK_ADD exprs
   11      | exprs . TOK_MUL exprs

    TOK_ADD  shift, and go to state 25
    TOK_MUL  shift, and go to state 26

    $default  reduce using rule 5 (stmt)


state 21

    7 stmt: TOK_ID TOK_ADD TOK_EQUALS . exprs

    TOK_LRBRACK  shift, and go to state 17
    TOK_NUM      shift, and go to state 18
    TOK_ID       shift, and go to state 19

    exprs  go to state 27


state 22

    6 stmt: TOK_ID TOK_MUL TOK_EQUALS . exprs

    TOK_LRBRACK  shift, and go to state 17
    TOK_NUM      shift, and go to state 18
    TOK_ID       shift, and go to state 19

    exprs  go to state 28


state 23

    3 stmts: stmt TOK_SEMICOLON stmts .

    $default  reduce using rule 3 (stmts)


state 24

   12 exprs: TOK_LRBRACK TOK_SUB . TOK_NUM TOK_RRBRACK

    TOK_NUM  shift, and go to state 29


state 25

   10 exprs: exprs TOK_ADD . exprs

    TOK_LRBRACK  shift, and go to state 17
    TOK_NUM      shift, and go to state 18
    TOK_ID       shift, and go to state 19

    exprs  go to state 30


state 26

   11 exprs: exprs TOK_MUL . exprs

    TOK_LRBRACK  shift, and go to state 17
    TOK_NUM      shift, and go to state 18
    TOK_ID       shift, and go to state 19

    exprs  go to state 31


state 27

    7 stmt: TOK_ID TOK_ADD TOK_EQUALS exprs .
   10 exprs: exprs . TOK_ADD exprs
   11      | exprs . TOK_MUL exprs

    TOK_ADD  shift, and go to state 25
    TOK_MUL  shift, and go to state 26

    $default  reduce using rule 7 (stmt)


state 28

    6 stmt: TOK_ID TOK_MUL TOK_EQUALS exprs .
   10 exprs: exprs . TOK_ADD exprs
   11      | exprs . TOK_MUL exprs

    TOK_ADD  shift, and go to state 25
    TOK_MUL  shift, and go to state 26

    $default  reduce using rule 6 (stmt)


state 29

   12 exprs: TOK_LRBRACK TOK_SUB TOK_NUM . TOK_RRBRACK

    TOK_RRBRACK  shift, and go to state 32


state 30

   10 exprs: exprs . TOK_ADD exprs
   10      | exprs TOK_ADD exprs .
   11      | exprs . TOK_MUL exprs

    TOK_ADD  shift, and go to state 25
    TOK_MUL  shift, and go to state 26

    TOK_ADD   [reduce using rule 10 (exprs)]
    TOK_MUL   [reduce using rule 10 (exprs)]
    $default  reduce using rule 10 (exprs)


state 31

   10 exprs: exprs . TOK_ADD exprs
   11      | exprs . TOK_MUL exprs
   11      | exprs TOK_MUL exprs .

    TOK_ADD  shift, and go to state 25

    TOK_ADD   [reduce using rule 11 (exprs)]
    $default  reduce using rule 11 (exprs)


state 32

   12 exprs: TOK_LRBRACK TOK_SUB TOK_NUM TOK_RRBRACK .

    $default  reduce using rule 12 (exprs)
